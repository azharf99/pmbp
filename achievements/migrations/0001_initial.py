# Generated by Django 5.0.4 on 2024-04-30 18:42

import django.db.models.deletion
import utilities.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion_name', models.CharField(max_length=100, verbose_name="The Champion's Name")),
                ('competition_name', models.CharField(max_length=100, verbose_name='Competition Name')),
                ('champion_class', models.CharField(blank=True, help_text='optional', max_length=100, null=True, verbose_name="The Champion's Class")),
                ('champion_level', models.CharField(max_length=100, verbose_name='Champion Level Category')),
                ('achievement_category', models.CharField(max_length=100, verbose_name='Achievement Category')),
                ('competition_type', models.CharField(max_length=100, verbose_name='Competition Type')),
                ('competition_level', models.CharField(max_length=100, verbose_name='Competition Level')),
                ('competition_date', models.CharField(max_length=10, verbose_name='Competition Date')),
                ('competition_organizer', models.CharField(max_length=100, verbose_name='Achievement Organizer')),
                ('school', models.CharField(default='SMAS IT Al Binaa', max_length=100, verbose_name='School')),
                ('certificate', models.FileField(blank=True, help_text='file format pdf/jpg', null=True, upload_to='prestasi/sertifikat', verbose_name='Achievement Certificate')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
                'db_table': 'achievements',
                'ordering': ['-competition_date'],
                'indexes': [models.Index(fields=['id'], name='achievement_id_d47ff6_idx')],
            },
        ),
        migrations.CreateModel(
            name='AchievementPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_photo', utilities.utils.CompressedImageField(blank=True, default='no-image.png', help_text='photo format png/jpg', null=True, quality=50, upload_to='prestasi', verbose_name='Achievement Photo')),
                ('achievement_notes', models.TextField(blank=True, default='', max_length=300, null=True, verbose_name='Achievement Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.achievement', verbose_name='Achievement')),
            ],
            options={
                'verbose_name': 'Achievement Photo',
                'verbose_name_plural': 'Achievement Photos',
                'db_table': 'achievement_photos',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['id'], name='achievement_id_121228_idx')],
            },
        ),
        migrations.CreateModel(
            name='AchievementProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_program', models.CharField(max_length=200, verbose_name='Achievement Program')),
                ('program_date', models.DateField(verbose_name='Program Date')),
                ('achievement', models.CharField(max_length=200, verbose_name='Achievement')),
                ('notes', models.CharField(blank=True, max_length=200, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('students', models.ManyToManyField(to='users.student', verbose_name='Students')),
            ],
            options={
                'verbose_name': 'Achievement Program',
                'verbose_name_plural': 'Achievement Programs',
                'db_table': 'achievement_programs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['id'], name='achievement_id_6a882d_idx')],
            },
        ),
    ]
